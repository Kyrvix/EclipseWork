package com.qa.DDTTest;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.Collection;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

@RunWith(Parameterized.class)
public class Para {

	@Parameters
	public static Collection<Object[]> data() throws IOException {
		FileInputStream file = new FileInputStream("C:\\Users\\Admin\\Downloads\\DemoSiteDDT.xlsx");
		@SuppressWarnings("resource")
		XSSFWorkbook workbook = new XSSFWorkbook(file);
		XSSFSheet sheet = workbook.getSheetAt(0);
		int rowNum;

		for (rowNum = 1; rowNum < sheet.getPhysicalNumberOfRows(); rowNum++) {
			for (int colNum = 0; colNum < 2; colNum++) {
				XSSFCell cell = sheet.getRow(rowNum).getCell(colNum);
				// String userCell = cell.getStringCellValue();
				// System.out.println(userCell);
			}
		}
		
		// sheet.getRow(rowNum).getPhysicalNumberOfCells()
		Object[][] ob = new Object[sheet.getPhysicalNumberOfRows()][2];

		for (int row = 0; row < sheet.getPhysicalNumberOfRows(); row++) {
			for (int column = 0; column < 2; column++) {
				ob[row][column] = sheet.getRow(row).getCell(column).getStringCellValue();
			}
		}
		return Arrays.asList(ob);
	}

	private String x;
	private String y;

	public Para(String x, String y) {
		this.x = x;
		this.y = y;
	}

	@Test
	public void test() {
		System.out.println(x + " " + y + " " + z);
	}
}
